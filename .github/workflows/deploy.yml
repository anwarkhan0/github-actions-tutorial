name: CI/CD to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # You must specify the EC2 host and SSH key here for the job to use them.
    # The aws-access-key-id, aws-secret-access-key, and aws-region are provided
    # to the aws-actions/configure-aws-credentials action.
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps & run tests
        run: |
          npm install
          npm test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build and push image to ECR
        run: |
          IMAGE_TAG=latest
          # The registry output from ecr-login is scoped to this job.
          ECR_URI=${{ steps.ecr-login.outputs.registry }}/github-actions-ec2:$IMAGE_TAG
          docker build -t $ECR_URI .
          docker push $ECR_URI
          
          # The image URI is now an environment variable for the remainder of this job.
          echo "IMAGE_URI=$ECR_URI" >> $GITHUB_ENV

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Use the environment variable set in the previous step.
            docker pull ${{ env.IMAGE_URI }}
            docker stop api || true
            docker rm api || true
            docker run -d -p 80:3000 --name api ${{ env.IMAGE_URI }}
